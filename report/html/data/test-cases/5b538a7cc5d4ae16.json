{"uid":"5b538a7cc5d4ae16","name":"test_006_login_out_failed[json_data0]","fullName":"testcase.test02_login_out.TestLogin_out#test_006_login_out_failed","historyId":"0788017b651ff6a522987213c0eb71ba","time":{"start":1710474340511,"stop":1710474341267,"duration":756},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <testcase.test02_login_out.TestLogin_out object at 0x10c75e190>\njson_data = {'token': '11d7ac5b4f242e4bfaabc632009090c1a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952'}\n\n    @allure.severity(allure.severity_level.NORMAL)\n    # 获取json文件中的第i条测试用例data数据\n    @pytest.mark.parametrize(\"json_data\", get_json_data(6, \"login_out_data\"))\n    # 数据异常-token过长\n    def test_006_login_out_failed(self, json_data):\n        # 获取token数据\n        token = get_token()\n        # 将token数据赋值给json_data[\"token\"]\n        json_data[\"token\"] = token + json_data[\"token\"]\n        # 调用退出登录接口完成退出，json_data为传入的请求体内容\n        response = self.login_out_api.login_out(json_data)\n        # 断言\n>       assert_login_out.failed_login_out(response)\n\ntestcase/test02_login_out.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [200]>\n\n    def failed_login_out(response):\n        # 断言状态码\n        assert 200 == response.status_code\n        # 断言业务状态\n>       assert not response.json().get(\"status\")\nE       AssertionError\n\nassert_hww/assert_login_out.py:16: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestLogin_out","time":{"start":1710474340511,"stop":1710474340511,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <testcase.test02_login_out.TestLogin_out object at 0x10c75e190>\njson_data = {'token': '11d7ac5b4f242e4bfaabc632009090c1a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952'}\n\n    @allure.severity(allure.severity_level.NORMAL)\n    # 获取json文件中的第i条测试用例data数据\n    @pytest.mark.parametrize(\"json_data\", get_json_data(6, \"login_out_data\"))\n    # 数据异常-token过长\n    def test_006_login_out_failed(self, json_data):\n        # 获取token数据\n        token = get_token()\n        # 将token数据赋值给json_data[\"token\"]\n        json_data[\"token\"] = token + json_data[\"token\"]\n        # 调用退出登录接口完成退出，json_data为传入的请求体内容\n        response = self.login_out_api.login_out(json_data)\n        # 断言\n>       assert_login_out.failed_login_out(response)\n\ntestcase/test02_login_out.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [200]>\n\n    def failed_login_out(response):\n        # 断言状态码\n        assert 200 == response.status_code\n        # 断言业务状态\n>       assert not response.json().get(\"status\")\nE       AssertionError\n\nassert_hww/assert_login_out.py:16: AssertionError","steps":[],"attachments":[{"uid":"b3791331cbc7e1a6","name":"log","source":"b3791331cbc7e1a6.txt","type":"text/plain","size":110}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false},"afterStages":[{"name":"_xunit_setup_method_fixture_TestLogin_out::0","time":{"start":1710474341317,"stop":1710474341317,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"test02_login_out"},{"name":"subSuite","value":"TestLogin_out"},{"name":"host","value":"hkdeMacBook-Pro"},{"name":"thread","value":"74463-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test02_login_out"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"json_data","value":"{'token': 'a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5b538a7cc5d4ae16.json","parameterValues":["{'token': 'a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952a13fdc49d60ec81535c7b472b899b952'}"]}
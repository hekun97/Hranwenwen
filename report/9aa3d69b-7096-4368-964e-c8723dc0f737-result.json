{"name": "test_001_login_success[test1234-test1234-\\u767b\\u5f55\\u6210\\u529f1]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 11 (char 10)", "trace": "self = <testcase.test01_login.TestLogin object at 0x11238b210>\nuname = 'test1234', upwd = 'test1234', expect = '登录成功'\n\n    @pytest.mark.parametrize(\"uname, upwd, expect\", utils.get_login_data_by_excel(2, 3))\n    # 定义日志级别为CRITICAL\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_001_login_success(self, uname, upwd, expect):\n        logging.info(\"用例输入数据如下：用户名：{}，密码：{}，预期结果：{}\".format(uname, upwd, expect))\n        # 发送请求附带数据\n        json_data = '{\"uname\": uname, \"upwd\": upwd}'\n>       response = self.login_api.login(json_data)\n\ntest01_login.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../api/login/login.py:19: in login\n    python_obj = json.loads(json_data)\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x110620d90>\ns = '{\"uname\": uname, \"upwd\": upwd}', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 11 (char 10)\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/json/decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "uname", "value": "'test1234'"}, {"name": "upwd", "value": "'test1234'"}, {"name": "expect", "value": "'登录成功'"}], "start": 1710170396761, "stop": 1710170396761, "uuid": "60187594-5cc6-4df6-9b0c-c16aae644b23", "historyId": "6261ef6205cdb334abd6178168c8e559", "testCaseId": "5e617d0a494d476c894db1d54060c1ec", "fullName": "testcase.test01_login.TestLogin#test_001_login_success", "labels": [{"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test01_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "hkdeMacBook-Pro"}, {"name": "thread", "value": "65060-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test01_login"}]}